---
layout: post
title: 代码之殇笔记（1）
tags: 管理 代码之殇
author: scgy5555
---
# 代码之殇笔记（1） #
================

## 第一章 ##
======================


### 1.让我们直视问题 ###
不得不承认，软件工程是不完整的科学，我们一定会面临各种问题，任何逃避、规避手段都不可避免他们的发生。
所以，没错让我们承认他们必然存在且预留一些时间给他们。

### 2.放弃结果论 ###
追求结果的结果就是逃避过程，而这种逃避迟早是要消耗更多的精力来修复的。这太显而易见的，不管是在A公司还是在B公司，对结果的追求总让我们麻木的忽略了过程，当我强调过程的时候得到的答案就是把东西做出来让大家能看见。

两个案例
===================
A公司，我们有一个明显无法通过的内容，粗制滥造且引人注目，但工期让我们不得不交作业。庆幸的是我们得到了技术管理的返工许可。

同样是A公司，某个功能的完善程度远未达标，当我面对老板的时候得到的答案是迅速发展，不要猛攀科技，最后会被一波小狗带走。

```
我只呆过两家写代码的公司，A公司是一家互联网服务类创业公司，B公司是一家稳重的软件公司。
```

### 3.让团队更稳重 ###
当你知道软件工程的不靠谱性的时候就应该预料到，时间被固定的时候你的队员只能压榨产品质量来获得生存。他们会欺骗进度，放弃质量，追求最终的结果，当这些事发生的时候你最好准备好返工许可。   
所以怎么挽救你的项目和团队，宽恕他们你也得不到你想要的东西。书里给我们的答案比较简单，我尽量总结一下

> 1.建立长期愿景
> 2.告诉他们真正要做的
> 3.让队员管理他们的时间
> 4.明确但不限定的计划
> 5.只相信你看到的东西

一个案例
===================
在B公司最痛苦的莫过于我永远不知道自己要做的事情，下个月做什么，下半年做什么，什么时候我的用户能看到我的艺术成果？这像是一种漫长的自杀过程，永远得不到结果但不得不做。

```
当我们做第二次的时候明显要优于第一次的执行，总会得到进步，也总会出现不同的错误，团队是会进步的
```
### 4.宽恕和坦白 ###
承认吧，我们都错了。而不是把灾难降临到每个人的头上。当读书读到好像被预言了什么一样这种亢奋感远比星座惯例来的舒爽。连微软也在发生这种事情让我坚信至少我去过的，我要去的公司都发生过甚至正在发生这样的事情。   
甚至不需要别人教我们，我们就知道对方会在某些事情上撒谎，这是社会的基本构成点，所以宽恕掉一切，或者说忽略掉一切谎言，了解我们的团队。   
很多事情不像我们追求的发展一样，但我们至少能坦白，真正正确的信息有利于今后的每一个抉择，当然这是要求自己。

### 6.接受并预计风险 ###
现在你知道计划总会遇到风险，作者给出了非常丰厚的经验，让我们学习管理这些风险，并承认他们确实总会存在。


草读完第一章，让我想起了很多工作中的人和事。不得不说这本书真的很好，我读了两遍依然觉得作者说的东西是正确的，我保证我有空的时候会读第三遍。